\relax 
\@writefile{lof}{\contentsline {figure}{\numberline {1}{\ignorespaces }}{1}{}\protected@file@percent }
\@writefile{lol}{\contentsline {lstlisting}{\numberline {1}Requirements for 4.6.1}{2}{}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {2}{\ignorespaces A new database named \texttt  {cs559dbsec} was created.}}{2}{}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {3}{\ignorespaces Within the \texttt  {cs559dbsec} database, a table named \texttt  {customers} was created with attributes as per Section 4.5.3.}}{3}{}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {4}{\ignorespaces Similarly, a table named \texttt  {queries} was established within the \texttt  {cs559dbsec} database with attributes outlined in Section 4.5.3.}}{4}{}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {5}{\ignorespaces A view called \texttt  {restrictedcustomers} was created within the \texttt  {cs559dbsec} database to encapsulate certain attributes specified in Section 4.5.3.}}{4}{}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {6}{\ignorespaces Data was inserted into the \texttt  {customers} table from the specified source.}}{4}{}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {7}{\ignorespaces Data was inserted into the \texttt  {queries} table from the provided resource.}}{5}{}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {8}{\ignorespaces Using HashingForDB.py; Printing all hashed passwords to verify the process and ensure all passwords are hashed.}}{7}{}\protected@file@percent }
\@writefile{lol}{\contentsline {lstlisting}{\numberline {2}Script for 4.6.3}{7}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {0.1}Execution}{9}{}\protected@file@percent }
\@writefile{lol}{\contentsline {lstlisting}{\numberline {3}Hashes for 4.6.3}{9}{}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {9}{\ignorespaces This user is intended for back-end operations with full privileges on the \texttt  {cs559dbsec} database.}}{10}{}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {10}{\ignorespaces This user has all privileges to all databases and the ability to grant privileges to other users, suitable for database administrators.}}{10}{}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {11}{\ignorespaces This user is intended for back-end operations with full privileges on the \texttt  {cs559dbsec} database.}}{10}{}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {12}{\ignorespaces This user is designed for web applications, with read-only access to the \texttt  {restrictedcustomers} view and write-only access to the \texttt  {queries} table.}}{10}{}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {13}{\ignorespaces The implemented solution for securing the password storage in the \textit  {customers} table is in full compliance with the requirements.}}{11}{}\protected@file@percent }
\@writefile{lol}{\contentsline {lstlisting}{\numberline {4}Script for 4.6.4}{11}{}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {14}{\ignorespaces The SQLite database provided by the National Security Agency (NSA) was queried using a Python script, \texttt  {NSATime.py}, to identify any records which correspond to the USCG's signal data based on specific geographic and temporal parameters. The database \texttt  {database.db} and the USCG log \texttt  {USCG.log} were utilized as inputs.}}{13}{}\protected@file@percent }
\@writefile{lol}{\contentsline {lstlisting}{\numberline {5}Script for 4.6.5}{13}{}\protected@file@percent }
\@writefile{lol}{\contentsline {lstlisting}{\numberline {6}Results for 4.6.5}{16}{}\protected@file@percent }
\@writefile{lol}{\contentsline {lstlisting}{\numberline {7}Script for 4.6.5}{17}{}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {15}{\ignorespaces To encrypt the specified columns, a Python script \texttt  {DBEncryptor.py} was utilized. This script executes a series of SQL commands to modify the existing \textit  {customers} table, enabling encryption on the \textit  {ssn} and \textit  {creditCardNumber} fields without the need to migrate data or create new tables.}}{19}{}\protected@file@percent }
\gdef \@abspage@last{20}
